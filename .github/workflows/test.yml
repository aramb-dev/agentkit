name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run backend tests with coverage
      run: |
        python -m pytest test_*.py -v --cov=agent --cov=app --cov=rag --cov-report=term-missing --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage
      if: always()
    
    - name: Upload coverage HTML
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage-report
        path: htmlcov/
      if: always()

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --run
    
    - name: Run frontend tests with coverage
      run: |
        cd frontend
        npm run test:coverage -- --run
    
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage
      if: always()

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright
      run: |
        npm ci
        npx playwright install --with-deps
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run Playwright tests
      run: |
        npx playwright test
      env:
        CI: true
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
      if: always()

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, e2e-tests]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        echo "Backend tests: ${{ needs.backend-tests.result }}"
        echo "Frontend tests: ${{ needs.frontend-tests.result }}"
        echo "E2E tests: ${{ needs.e2e-tests.result }}"
